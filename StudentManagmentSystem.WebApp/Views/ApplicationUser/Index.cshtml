@{
    var loggedInUserRole = Context.Session.GetString("LoggedInUserRole");
    var loggedInUserDept = Context.Session.GetString("LoggedInUserDept");
    var loggedInUser = Context.Session.GetString("LoggedInUser");
   
}
<link rel="stylesheet" href="~/css/StudentProfile.css" asp-append-version="true" />
<h2>Student Management System</h2>
<div class="container table-scroll-wrapper">
    
    <table>
        <thead>
            <tr class="table-row">
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Department</th>
                <th>Info</th>
            </tr>
        </thead>
        <tbody id="user-list">
        </tbody>
    </table>

    <!-- Aligning Add User and Edit User Buttons Side by Side -->
    
    
</div>
<div class="button-container">
    <button class="btn btn-primary add-btn"
            type="button"
            data-bs-toggle="offcanvas"
            data-bs-target="#offcanvasScrolling"
            aria-controls="offcanvasScrolling"
            onclick="addUpdateUser(0)">
        ➕ Add User
    </button>
    <button class="edit-profile btn btn-primary edit-btn "></button>
</div>
    @*Info*@
    <div class="modal fade" id="InfoModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>            
                </div>
            </div>
        </div>
    </div>
    @* add/update *@
    <div class="offcanvas offcanvas-start" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="AddUpdate-modal" aria-labelledby="offcanvasScrollingLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasScrollingLabel"></h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <form id="user-form-submit" method="post">
                <input id="user-id" name="Id" type="hidden" />

                <div class="form-group">
                    <label for="FirstName">First Name</label>
                    <input id="user-fname" name="FirstName" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Last Name:</label>
                    <input id="user-lname" name="LastName" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Email:</label>
                    <input id="user-email" name="EmailId" type="email" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Address 1:</label>
                    <input id="user-add1" name="Address1" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Address 2:</label>
                    <input id="user-add2" name="Address2" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Mobile Number:</label>
                    <input id="user-mobileNo" name="MobileNumber" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Username:</label>
                    <input id="user-username" name="Username" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Password:</label>
                    <input id="user-pass" name="Password" class="form-control" type="password" required />
                </div>
                <div class="form-group">
                    <label>Role:</label>
                    @if (loggedInUserRole != "Admin")
                    {
                        <input type="hidden" name="RoleId" class="user-department" />
                    }
                    <select name="RoleId" class="form-control user-role-dropdown"
                    @(loggedInUserRole == "Admin" ? "" : "disabled")>
                        <option class="user-role" value="">Select Role</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Department:</label>
                    @if (loggedInUserRole != "Admin")
                    {
                        <input type="hidden" name="DepartmentId" class="user-role" />
                    }
                    <select name="DepartmentId" class="form-control user-department-dropdown"
                    @(loggedInUserRole == "Admin" ? "" : "disabled")>
                        <option class="user-department" value="">Select Department</option>
                    </select>
                </div>
                <div class="btn-container">
                    <button type="submit" class="btn btn-primary" >Submit</button>
                    <a  class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
    @* delete *@
    <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="deleteMessage"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" id="confirmDeleteBtn" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    
    <script>
        var userId;
         var deleteModal = new bootstrap.Modal($('#deleteConfirmationModal'));
        $(document).ready(function () {
            loadUsers();
        })
        //load users
        function loadUsers() {
            $.ajax({
                method: 'GET',
                url: '/ApplicationUser/GetUsers',
                success: function (response) {
                    console.log(response);
                    $('#user-list').html('');
                    $.each(response, function (index,item) {
                        $('#user-list').append(renderUserRow(item));
                    });
                }
            });
        }
        function renderUserRow(user) {
            var editButton = '';
            var deleteButton = '';
            console.log(user.username,'@loggedInUser'.trim().toLowerCase());
            if('@loggedInUser'.trim().toLowerCase() === user.username){

                $('.edit-profile').html(``);
                $('.edit-profile').html(`<span 
                data-bs-toggle="offcanvas"
                data-bs-target="#offcanvasScrolling"
                aria-controls="offcanvasScrolling"
                onclick="addUpdateUser(${user.id})">✏️ Edit User</span>`);
            }

            $('.update-delete-column').html('');

             if ('@loggedInUserRole' === 'Admin') {
            // Append headers to the first row only if they don't exist
            if ($('.update-column').length === 0) {
                $('.table-row').append(`
                    <th class="update-column">Update</th>
                    <th class="delete-column">Delete</th>
                `);
            }
            editButton = `<td><a class="btn btn-warning btn-sm"
                data-bs-toggle="offcanvas"
                data-bs-target="#offcanvasScrolling"
                aria-controls="offcanvasScrolling"
                onclick="addUpdateUser(${user.id})">Edit</a></td>`;
            deleteButton = `<td><button type="button" onclick="confirmDeleteUser(${user.id}, '${user.firstName}')"
                class="btn btn-danger btn-sm"
                data-bs-toggle="modal"
                data-bs-target="#deleteConfirmationModal">
                Delete
                </button></td>`;
        }
           
            var html =`<tr id="row_${user.id}">
            <td>${user.firstName}</td>
            <td>${user.lastName}</td>
            <td>${user.emailId}</td>
            <td>${user.roleName}</td>
            <td>${user.departmentName}</td>
            <td>

            <a class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#InfoModal" onclick="getUserDetails(${user.id})">Info</a>
            </td>           
            ${editButton}          
            ${deleteButton}
            </tr>`;
            return html;
        }

        // Info
        function getUserDetails(id) {
            $.ajax({
                method: 'GET',
                url: '/ApplicationUser/Info',
                data: { id: id },
                success: function (response) {
                     $('#exampleModalLabel').text(`User Details - ${response.firstName} ${response.lastName}`);
            $('.modal-body').html(`
                <p><strong>First Name:</strong> ${response.firstName}</p>
                <p><strong>Last Name:</strong> ${response.lastName}</p>
                <p><strong>Email:</strong> ${response.emailId}</p>
                <p><strong>Role:</strong> ${response.roleName}</p>
                <p><strong>Department:</strong> ${response.departmentName}</p>
                
            `);
            $('#InfoModal').modal('show');                    
                },
                error: function (error) {
                    alert("Error fetching user details: " + error.responseText);
                }
            });
        }
        
        function confirmDeleteUser(id, name) {
            userId = id;
            $('#deleteMessage').html('');
            $('#deleteMessage').html('Are you sure you want to delete the user "<strong>' + name + '</strong>"?');
            deleteModal.show();
        }
        $('#confirmDeleteBtn').on('click', function () {
            if (userId) {
                deleteUser(userId);
            }
        });
        function deleteUser() {
        $.ajax({
            method: 'POST',
            url: '/ApplicationUser/Delete',
            data: {id: userId},
            success: function (response) {
               deleteModal.hide();
                loadUsers();    
            },
            error: function (error) {
                alert("Error deleting user: " + error.responseText);
            }
        });
        }
        
        var addEditModal = new bootstrap.Offcanvas($('#AddUpdate-modal'));
            function addUpdateUser(id) {
            $('#offcanvasScrollingLabel').html(id == 0 ? "Add New User" : "Update User");
            $.ajax({
                method: 'GET',
                url: 'ApplicationUser/AddUpdate',
                data: { id: id },
                success: function (response) {
                    console.log(response);
                    $('#user-id').val(response.id );
                    $('#user-fname').val(response.firstName );
                    $('#user-lname').val(response.lastName);                   
                    $('#user-email').val(response.emailId );                   
                    $('#user-add1').val(response.address1 );
                    $('#user-add2').val(response.address2 );
                    $('#user-mobileNo').val(response.mobileNumber );
                    $('#user-username').val(response.username );
                    $('#user-pass').val(response.password );
                    $('.user-department-dropdown').html('<option value="">-- Select Department --</option>');
                    $('.user-role-dropdown').html('<option value="">-- Select Role --</option>');
                    response.departments.forEach(item => {
                        $('.user-department-dropdown').append(
                            `<option value="${item.id}" ${item.name == response.departmentName ? "selected" : ""}>${item.name}</option>`
                        );
                    });
                      response.roles.forEach(item => {
                        $('.user-role-dropdown').append(
                            `<option value="${item.id}" ${item.name == response.roleName ? "selected" : ""}>${item.name}</option>`
                        );
                    });
                   addEditModal.show();
                },
                error: function (error) {
                    alert("Error fetching user details!");
                    console.error(error);
                }
            });
        }
                $('#user-form-submit').on('submit', function(e){
                var formData = $(this).serialize();
                e.preventDefault();
                console.log(formData);
                $.ajax({
                method: 'POST',
                url: 'ApplicationUser/AddUpdateUser',
                data: formData,
                success: function (response) {
                    addEditModal.hide();
                    $('#offcanvasScrollingLabel').html("");
                    $('.user-department-dropdown').html('');
                    $('.user-role-dropdown').html('');
                    loadUsers();
                },
                error: function (error) {
                    alert(error);
                }
             })
        })
    </script>
}
